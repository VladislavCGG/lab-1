import streamlit as st

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
st.set_page_config(page_title="–ê–Ω–∞–ª—ñ–∑ —á–∏—Å–µ–ª ‚Äî –í–∞—Ä—ñ–∞–Ω—Ç 29", page_icon="üìä")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("–ê–Ω–∞–ª—ñ–∑ –Ω–∞–±–æ—Ä—É —á–∏—Å–µ–ª (–í–∞—Ä—ñ–∞–Ω—Ç 29)")

# –ü—ñ–¥–ø–∏—Å —Ä–æ–∑—Ä–æ–±–Ω–∏–∫–∞ ‚Äî ‚ö†Ô∏è –ó–ê–ú–Ü–ù–ò [–Ü–º‚Äô—è] –Ω–∞ —Å–≤–æ—î!
st.markdown("**–†–æ–∑—Ä–æ–±–Ω–∏–∫: –ß–∞–≤–∞ –í–ª–∞–¥–∏—Å–ª–∞–≤**")

# –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è
st.info(
    "–í–≤–µ–¥—ñ—Ç—å 10 —á–∏—Å–µ–ª —á–µ—Ä–µ–∑ –∫–æ–º—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 139,941,287,797,414,333,814,533,743,204). "
    "–ß–∏—Å–ª–∞ –º–∞—é—Ç—å –±—É—Ç–∏ –≤—ñ–¥ 10 –¥–æ 1000. –î—Ä–æ–±–æ–≤—ñ —á–∏—Å–ª–∞ ‚Äî –∑ –∫—Ä–∞–ø–∫–æ—é (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 12.5)."
)

# –ü–æ–ª–µ –≤–≤–æ–¥—É
user_input = st.text_input(
    "–í–∞—à—ñ —á–∏—Å–ª–∞:",
    value="139,941,287,797,414,333,814,533,743,204",
    help="–í–≤–µ–¥—ñ—Ç—å —Ä—ñ–≤–Ω–æ 10 —á–∏—Å–µ–ª —á–µ—Ä–µ–∑ –∫–æ–º—É"
)

# –ö–Ω–æ–ø–∫–∞ –∞–Ω–∞–ª—ñ–∑—É (–Ω–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–∞, –∞–ª–µ –∑—Ä—É—á–Ω–∞)
if st.button("–ê–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏") or user_input:
    if not user_input.strip():
        st.error("–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–∞.")
    else:
        parts = [p.strip() for p in user_input.split(",")]
        
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ
        if len(parts) != 10:
            st.error(f"–ü–æ–º–∏–ª–∫–∞: –ø–æ—Ç—Ä—ñ–±–Ω–æ —Ä—ñ–≤–Ω–æ 10 —á–∏—Å–µ–ª, –∞ –≤–≤–µ–¥–µ–Ω–æ {len(parts)}.")
        else:
            numbers = []
            valid = True
            for part in parts:
                if not part:
                    st.error("–ü–æ–º–∏–ª–∫–∞: –∑–Ω–∞–π–¥–µ–Ω–æ –ø–æ—Ä–æ–∂–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç.")
                    valid = False
                    break
                try:
                    num = float(part)
                    if num < 10 or num > 1000:
                        st.error(f"–ü–æ–º–∏–ª–∫–∞: —á–∏—Å–ª–æ {num} –ø–æ–∑–∞ –¥—ñ–∞–ø–∞–∑–æ–Ω–æ–º [10, 1000].")
                        valid = False
                        break
                    numbers.append(num)
                except ValueError:
                    st.error(f'–ü–æ–º–∏–ª–∫–∞: "{part}" ‚Äî –Ω–µ —á–∏—Å–ª–æ. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫—Ä–∞–ø–∫—É –¥–ª—è –¥—Ä–æ–±–æ–≤–æ—ó —á–∞—Å—Ç–∏–Ω–∏.')
                    valid = False
                    break
            
            if valid and len(numbers) == 10:
                min_val = min(numbers)
                max_val = max(numbers)
                avg_val = round(sum(numbers) / len(numbers), 2)
                
                # –í–∏–≤–µ–¥–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
                st.success("‚úÖ –ê–Ω–∞–ª—ñ–∑ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
                st.markdown(f"<p style='color:red; font-weight:bold;'>Min: {min_val}</p>", unsafe_allow_html=True)
                st.markdown(f"<p style='color:green; font-weight:bold;'>Max: {max_val}</p>", unsafe_allow_html=True)
                st.write(f"Average: {avg_val}")